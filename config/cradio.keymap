#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NUM 1
#define NAV 2
#define FUN 3 

#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29  // right-hand keys

/ {
    behaviors {
        // based on example use-case for home row mods from: https://zmk.dev/docs/behaviors/hold-tap
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_KEYS>;
            hold-trigger-on-release;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_KEYS>;
            hold-trigger-on-release;
        };
        ao_lower: ao_lower {
            compatible = "zmk,behavior-macro";
            label = "AO_LOWER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp E>
                , <&macro_tap     &kp N5>
                , <&macro_tap     &kp RET>;
        };
        ae_lower: ae_lower {
            compatible = "zmk,behavior-macro";
            label = "AE_LOWER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp E>
                , <&macro_tap     &kp N4>
                , <&macro_tap     &kp RET>;
        };
        oe_lower: oe_lower {
            compatible = "zmk,behavior-macro";
            label = "OE_LOWER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp F>
                , <&macro_tap     &kp N6>
                , <&macro_tap     &kp RET>;
        };
        ao_upper: ao_upper {
            compatible = "zmk,behavior-macro";
            label = "AO_UPPER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_release &kp LSHFT>
                , <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp C>
                , <&macro_tap     &kp N5>
                , <&macro_tap     &kp RET>
                , <&macro_press   &kp LSHFT>;
        };
        ae_upper: ae_upper {
            compatible = "zmk,behavior-macro";
            label = "AE_UPPER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_release &kp LSHFT>
                , <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp C>
                , <&macro_tap     &kp N4>
                , <&macro_tap     &kp RET>
                , <&macro_press   &kp LSHFT>;
        };
        oe_upper: oe_upper {
            compatible = "zmk,behavior-macro";
            label = "OE_UPPER";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_release &kp LSHFT>
                , <&macro_press   &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap     &kp D>
                , <&macro_tap     &kp N6>
                , <&macro_tap     &kp RET>
                , <&macro_press   &kp LSHFT>;
        };
        ao: ao {
            compatible = "zmk,behavior-mod-morph";
            label = "AO";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&ao_lower>, <&ao_upper>;
        };
        ae: ae {
            compatible = "zmk,behavior-mod-morph";
            label = "AE";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&ae_lower>, <&ae_upper>;
        };
        oe: oe {
            compatible = "zmk,behavior-mod-morph";
            label = "OE";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&oe_lower>, <&oe_upper>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_ao {
            timeout-ms = <50>;
            key-positions = <11 20>;
            bindings = <&ao>;
        };
        combo_ae {
            timeout-ms = <50>;
            key-positions = <11 18>;
            bindings = <&ae>;
        };
        combo_oe {
            timeout-ms = <50>;
            key-positions = <18 20>;
            bindings = <&oe>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
        config_tristate {
            if-layers = <NUM NAV>;
            then-layer = <FUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp APOS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &lhm LCTRL A  &lhm LALT R   &lhm LGUI S   &lhm LSHFT T  &kp G             &kp M         &rhm LSHFT N  &rhm LGUI E   &rhm LALT I   &rhm LCTRL O
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp SLASH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &lt NAV SPC   &kp TAB           &kp RET       &lt NUM BSPC
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp BSLH      &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT          &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp N6        &kp N7        &kp N8        &kp N9        &kp N0            &none         &kp LSHFT     &kp LGUI      &kp LALT      &kp LCTRL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &none         &none         &none         &none         &none
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &lt NAV SEMI  &kp GRAVE         &none         &none
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &none         &none         &none         &none         &none             &none         &ao          &ae            &oe           &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &none             &none         &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &none         &none         &none         &none             &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none         &none             &kp DEL       &lt NUM ESC
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F11       &kp F12       &kp F13       &kp F14       &kp F15           &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp F6        &kp F7        &kp F8        &kp F9        &kp F10           &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &none         &none         &none         &none         &none        
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none         &none             &none         &none
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

   };
};